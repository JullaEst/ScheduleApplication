package Controller;

import DBAccess.AppointmentsDB;
import DBAccess.CustomersDB;
import Model.Appointments;
import Model.Customers;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.stage.Stage;

import java.io.IOException;
import java.net.URL;
import java.sql.SQLException;
import java.util.ResourceBundle;

public class CustomerScreen implements Initializable {

    public TableView <Customers> viewCustomerList;

    public TableColumn CustomerIdCol;
    public TableColumn NameCol;
    public TableColumn AddressCol;
    public TableColumn ZipcodeCol;
    public TableColumn PhoneNumberCol;
    public TableColumn DivisionIdCol;
    public TableColumn CountryIdCol;

    public Button addButton;
    public Button editButton;
    public Button deleteButton;
    public Button mainScreenButton;

    /**
     * Customer Screen controller handles the table view of the Customers,
     * the user is able to add, edit or delete a customer.
     */
    Customers customers;

    ObservableList<Customers> customerSelected = FXCollections.observableArrayList();

    //Add Button directs user to the Add Customer screen
    public void onAddButton(ActionEvent event) throws IOException {
        Stage stage = (Stage) ((Button) event.getSource()).getScene().getWindow();
        Object scene = FXMLLoader.load(getClass().getResource("/View/AddCustomer.fxml"));
        stage.setScene(new Scene((Parent) scene));
        stage.show();
    }

    //Edit Button directs user to the Edit Customer screen
    public void onEditButton(ActionEvent event) throws IOException, SQLException {

        //selects customer to edit
        if(viewCustomerList.getSelectionModel().getSelectedItem() != null) {
            Customers selectedCustomer;
            selectedCustomer = viewCustomerList.getSelectionModel().getSelectedItem();

            FXMLLoader loader = new FXMLLoader();
            loader.setLocation(getClass().getResource("/View/EditCustomer.fxml"));
            loader.load();

            EditCustomer controller = loader.getController();
            controller.sendCustomer(selectedCustomer);

            Stage stage = (Stage) ((Button) event.getSource()).getScene().getWindow();
            Parent scene = loader.getRoot();
            stage.setScene(new Scene((Parent) scene));
            stage.show();
        }
    }

    //User is able to delete a customer
    public void onDeleteButton(ActionEvent event) throws IOException {

        Customers c = viewCustomerList.getSelectionModel().getSelectedItem();

        if(c != null)
        {
            Alert confirm = new Alert(Alert.AlertType.CONFIRMATION);
            confirm.setTitle("Customers");
            confirm.setHeaderText("Confirm Cancellation");
            confirm.setContentText("This customer and associated appointments with this customer will be deleted. Are you sure you want to delete?");
            confirm.showAndWait();

            if(confirm.getResult() == ButtonType.OK)
            {
                if(CustomersDB.deleteCustomer(c)) {
                    viewCustomerList.setItems(CustomersDB.getAllCustomers());
                    Alert alert = new Alert((Alert.AlertType.INFORMATION));
                    alert.setTitle("Customers");
                    alert.setHeaderText("Deletion Complete");
                    alert.setContentText("Customer is deleted.");
                    alert.showAndWait();
                }
            }
        } else {
            Alert alert = new Alert(Alert.AlertType.WARNING);
            alert.setTitle("Customers");
            alert.setHeaderText("No Customer Selected");
            alert.setContentText("Please select a customer to delete");
            alert.showAndWait();
        }

    }

    //Directs user back to the Main menu
    public void onMainScreenButton(ActionEvent event) throws IOException {
        Stage stage = (Stage) ((Button) event.getSource()).getScene().getWindow();
        Object scene = FXMLLoader.load(getClass().getResource("/View/MainMenu.fxml"));
        stage.setScene(new Scene((Parent) scene));
        stage.show();
    }

    @Override
    //gathers data of customers into the table view
    public void initialize(URL url, ResourceBundle resourceBundle) {
        viewCustomerList.setItems(CustomersDB.getAllCustomers());
        CustomerIdCol.setCellValueFactory(new PropertyValueFactory<>("CustomerID"));
        NameCol.setCellValueFactory(new PropertyValueFactory<>("CustomerName"));
        AddressCol.setCellValueFactory(new PropertyValueFactory<>("CustomerAddress"));
        ZipcodeCol.setCellValueFactory(new PropertyValueFactory<>("CustomerZipCode"));
        PhoneNumberCol.setCellValueFactory(new PropertyValueFactory<>("CustomerPhoneNumber"));
        DivisionIdCol.setCellValueFactory(new PropertyValueFactory<>("divisionID"));
        CountryIdCol.setCellValueFactory(new PropertyValueFactory<>("countryID"));

    }
}

