package Controller;

import Credentials.Credentials;
import DBAccess.UsersDB;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

import java.io.IOException;
import java.net.URL;
import java.sql.SQLException;
import java.time.ZoneId;
import java.util.Locale;
import java.util.Optional;
import java.util.ResourceBundle;

public class LogIn implements Initializable {

    public TextField userLocation;
    @FXML
    private Button exitButton;

    @FXML
    private Button loginButton;

    @FXML
    private TextField passwordText;

    @FXML
    private TextField usernameText;

    private ResourceBundle rb = ResourceBundle.getBundle("Language/login", Locale.getDefault());

    @Override
    public void initialize(URL url, ResourceBundle resourceBundle) {

        //ResourceBundle rb = ResourceBundle.getBundle("Language/login", Locale.getDefault());

        usernameText.setText(rb.getString("username"));
        passwordText.setText(rb.getString("password"));

        loginButton.setText(rb.getString("loginButton"));
        exitButton.setText(rb.getString("exitButton"));


        userLocation.setText(ZoneId.systemDefault().toString());  //sets time zone and location based on user
        System.out.println("I am initialized!");
    }

    public void onLoginButton(javafx.event.ActionEvent actionEvent) throws IOException, SQLException {

        String userName = usernameText.getText();
        String password = passwordText.getText();
        int userId = UsersDB.verifyLogin(userName, password);

        Locale.setDefault(new Locale("en")); //set back to english

        if(Credentials.validate(usernameText.getText(), passwordText.getText())){

            UsersDB.verifyLogin(usernameText.getText(), passwordText.getText());

            Stage stage = (Stage) ((Button) actionEvent.getSource()).getScene().getWindow();
            Object scene = FXMLLoader.load(getClass().getResource("/View/MainMenu.fxml"));
            stage.setScene(new Scene((Parent) scene));
            stage.show();

        } else {
            if(!Credentials.validate(usernameText.getText(), passwordText.getText()) && Locale.getDefault().getDisplayLanguage().equals("fr")){
                Alert alert = new Alert(Alert.AlertType.ERROR);
                alert.setTitle((ResourceBundle.getBundle("Language/login", Locale.getDefault()).getString("loginTitle")));
                alert.setHeaderText((ResourceBundle.getBundle("Language/login", Locale.getDefault()).getString("headerText")));
                alert.setContentText((ResourceBundle.getBundle("Language/login", Locale.getDefault()).getString("loginText")));
                alert.show();
                return;

            }else{
                Alert alert = new Alert(Alert.AlertType.ERROR);
                alert.setTitle((ResourceBundle.getBundle("Language/login", Locale.getDefault()).getString("loginTitle")));
                alert.setHeaderText((ResourceBundle.getBundle("Language/login", Locale.getDefault()).getString("headerText")));
                alert.setContentText((ResourceBundle.getBundle("Language/login", Locale.getDefault()).getString("loginText")));
                alert.show();
                return;
            }

        }

    }


    public void onExitButton(ActionEvent actionEvent) {
        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
        alert.setTitle("Exit Confirmation");
        alert.setHeaderText("You are now exiting the program.");
        alert.setContentText("Would you like to exit the program?");

        Optional<ButtonType> result = alert.showAndWait();
        if (result.get() == ButtonType.OK) {
            System.exit(0);
        }
    }

    public void onUserNameText(ActionEvent event) {
    }

    public void onPasswordText(ActionEvent event) {
    }

    public void onZoneId(ActionEvent event) {
    }
}
